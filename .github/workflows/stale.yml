name: Autoclose Stale PRs

on:
  schedule:
    # Runs every day at 00:00 UTC
    - cron: */30 * * * * *'

jobs:
  autoclose:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get list of open PRs
        id: prs
        run: |
          # Get the list of open pull requests in the repository
          prs=$(curl -s https://api.github.com/repos/$krishi0408/cd-pipeline-sample/pulls?state=open | jq '.[] | .number')

          # Store the list of pull requests as a GitHub Actions output
          echo "::set-output name=prs::$prs"

      - name: Close stale PRs
        uses: actions/github-script@0.8.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            # Get the list of open pull requests
            prs="${{ steps.prs.outputs.prs }}"

            # Split the list of pull requests into an array
            IFS=',' read -r -a pr_numbers <<< "$prs"

            # Loop through each pull request
            for pr_number in "${pr_numbers[@]}"; do
              echo "Checking pull request #$pr_number"

              # Get the creation time of the pull request
              created_at=$(curl -s https://api.github.com/repos/$krishi0408/cd-pipeline-sample/pulls/$pr_number | jq '.created_at')

              # Calculate the difference between the current time and the creation time of the pull request
              days_since_created=$(( ($(date +%s) - $(date -d "$created_at" +%s)) / 86400 ))

              # If the pull request has been open for more than 14 days, close it
              if [ "$days_since_created" -gt 14 ]; then
                echo "Closing pull request #$pr_number"
                curl -s -X PATCH -H "Authorization: token ${{ env.GITHUB_TOKEN }}" -H "Accept: application/vnd.github+json" https://api.github.com/repos/${{github.repository}}/pulls/$pr_number -d '{"state":"closed"}'
              else
                echo "Pull request #$pr_number is still fresh, no need to close it"
              fi
            done
